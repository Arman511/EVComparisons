@model IEnumerable<EVComparisons.Models.Cars>

@{
    ViewData["Title"] = "Search Results";
    var currentPage = (int)(ViewData["Page"] ?? 1);
    var totalCount = (int)(ViewData["TotalCount"] ?? 0);
    var totalPages = Math.Ceiling((double)totalCount / 10); // Total pages calculated based on total count and 10 cars per page

    // Retrieve the current search parameters from the query string
    var queryString = ViewContext.HttpContext.Request.QueryString.ToString();

    // Remove the "page" parameter from the query string
    var cleanedQueryString = queryString.Replace("&page=" + currentPage, "").Replace("?page=" + currentPage, "");
    string maker = (ViewData["maker"] as string) ?? "";
    var minPrice = ViewData["minPrice"] ?? "";
    var maxPrice = ViewData["maxPrice"] ?? "";
    var range = ViewData["range"] ?? "";
    var chargeTime = ViewData["chargeTime"] ?? "";
}

<h1>Search Results</h1>
<p>
    Sort by:
    <select id="sortSearchSelector">
        <option value="0">Select One</option>
        <option value="1">Maker</option>
        <option value="2">Model</option>
        <option value="3">Price: Low to High</option>
        <option value="4">Price: High to Low</option>
        <option value="5">Charge Time</option>
    </select>
</p>
<script>
    document.getElementById('sortSearchSelector').addEventListener('change', function () {
        var sortBy = this.value;
        var url = `?maker=${encodeURIComponent('@maker')}&minPrice=${encodeURIComponent('@minPrice')}&maxPrice=${encodeURIComponent('@maxPrice')}&range=${encodeURIComponent('@range')}&chargeTime=${encodeURIComponent('@chargeTime')}&page=1&sortBy=${sortBy}`;
        location.href = url;
    });
</script>
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>
                    Image
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Maker)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Model)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Seats)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Range)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.NormalChargeTime).Replace("NormalChargeTime", "Charge Time")
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FullPrice).Replace("FullPrice", "Full Price")
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <img style="display: block; height: 50%; width: 100%" src="@Html.DisplayFor(modelItem => item.ImageLink)" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Maker)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Model)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Seats)
                    </td>
                    <td>
                        @{
                            var separatedCarType = item.Type.ToString().Replace("_", " ");
                        }
                        @separatedCarType
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Range) miles
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NormalChargeTime) minutes
                    </td>
                    <td>
                        £@Html.DisplayFor(modelItem => item.FullPrice)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="pagination">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            @{
                // Add the page query parameter to the cleaned query string
                var pageQuery = cleanedQueryString.Length > 0 ? $"{cleanedQueryString}&page=" : "page=";

                // Pagination links
                if (currentPage > 1)
                {
                    <li class="page-item"><a class="page-link" href="?@($"{pageQuery}1")">First</a></li>
                    <li class="page-item"><a class="page-link" href="?@($"{pageQuery}{currentPage - 1}")">Previous</a></li>
                }

                for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")"><a class="page-link" href="?@($"{pageQuery}{i}")">@i</a></li>
                }

                if (currentPage < totalPages)
                {
                    <li class="page-item"><a class="page-link" href="?@($"{pageQuery}{currentPage + 1}")">Next</a></li>
                    <li class="page-item"><a class="page-link" href="?@($"{pageQuery}{totalPages}")">Last</a></li>
                }
            }
        </ul>
    </nav>
</div>