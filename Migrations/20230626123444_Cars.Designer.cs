// <auto-generated />
using EVComparisons.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EVComparisons.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230626123444_Cars")]
    partial class Cars
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EVComparisons.Models.Cars", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("BatteryCapacity")
                        .HasColumnType("float");

                    b.Property<int>("CargoVolume")
                        .HasColumnType("int");

                    b.Property<int>("Drive")
                        .HasColumnType("int");

                    b.Property<int>("Efficiency")
                        .HasColumnType("int");

                    b.Property<int>("FastChargePort")
                        .HasColumnType("int");

                    b.Property<double>("FastChargePower")
                        .HasColumnType("float");

                    b.Property<int>("FastChargeTime")
                        .HasColumnType("int");

                    b.Property<int>("FastPortLocation")
                        .HasColumnType("int");

                    b.Property<int>("FullPrice")
                        .HasColumnType("int");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Made")
                        .HasColumnType("int");

                    b.Property<string>("Maker")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxPayload")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NaughtTo60")
                        .HasColumnType("float");

                    b.Property<int>("NormalChargePort")
                        .HasColumnType("int");

                    b.Property<double>("NormalChargePower")
                        .HasColumnType("float");

                    b.Property<int>("NormalChargeTime")
                        .HasColumnType("int");

                    b.Property<int>("NormalPortLocation")
                        .HasColumnType("int");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<bool>("RoofRails")
                        .HasColumnType("bit");

                    b.Property<int>("Safety")
                        .HasColumnType("int");

                    b.Property<int>("Seats")
                        .HasColumnType("int");

                    b.Property<int>("TopSpeed")
                        .HasColumnType("int");

                    b.Property<int>("TotalPower")
                        .HasColumnType("int");

                    b.Property<int>("TotalTorque")
                        .HasColumnType("int");

                    b.Property<bool>("TowHitch")
                        .HasColumnType("bit");

                    b.Property<int>("TowWeight")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
